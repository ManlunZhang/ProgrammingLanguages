Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
hw3provided.sml:43.6-43.38 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.filter (check_if_capital,l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
hw3provided.sml:40.27-45.27 Error: operator is not a function [tycon mismatch]
  operator: bool
  in expression:
    (Char.isUpper (String.sub (y,0))) check_if_capital

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
hw3provided.sml:40.27-45.22 Error: operator is not a function [tycon mismatch]
  operator: bool
  in expression:
    (Char.isUpper y) check_if_capital

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
hw3provided.sml:43.19-43.34 Error: opeator and operand don't agree [overload]
  operator domain: 'Z * 'Z
  operand:         (string -> int) * int
  in expression:
    String.size > 3

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
hw3provided.sml:43.19-43.34 Error: operator and operand don't agree [overload]
  operator domain: 'Z * 'Z
  operand:         (string -> int) * int
  in expression:
    String.size > 3

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val check_if_capital = fn : char -> bool
val only_capitals = fn : int list -> int list
al it = () : unit
-

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
hw3provided.sml:43.27-43.42 Error: operator and operand don't agree [overload]
  operator domain: 'Z * 'Z
  operand:         (string -> int) * int
  in expression:
    String.size < 4

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val check_if_capital = fn : string -> bool
val it = () : unit
- check_if_capital("Asd");
val it = true : bool
- check_if_capital("asd");
val it = false : bool
- use "hw3provided.sml";
[opening hw3provided.sml]
hw3provided.sml:40.25-40.27 Error: syntax error: replacing  DARROW with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
hw3provided.sml:48.6-48.38 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.filter (check_if_capital,l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
hw3provided.sml:48.50 Error: unbound variable or constructor: i
hw3provided.sml:48.6-48.60 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         ('Y -> bool) * string list
  in expression:
    List.filter ((fn x => Char.isUpper <exp>),l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
hw3provided.sml:48.6-48.60 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.filter ((fn x => Char.isUpper <exp>),l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
hw3provided.sml:48.6-48.60 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.filter ((fn x => Char.isUpper <exp>),l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
hw3provided.sml:48.26-48.48 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char * char
  operand:         char * string
  in expression:
    String.sub (x,0) = "o"
hw3provided.sml:48.6-48.52 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> _) * string list
  in expression:
    List.filter ((fn x => <exp> = <exp>),l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
hw3provided.sml:48.26-48.48 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char * char
  operand:         char * string
  in expression:
    String.sub (x,0) = "o"
hw3provided.sml:48.6-48.52 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> _) * string list
  in expression:
    List.filter ((fn x => <exp> = <exp>),l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- List.filter(fn x => x < 4) [1, 2, 3, 4, 5];
val it = [1,2,3] : int list
- List.filter (fn x => x < 4) [2,4,3,9,6,1,0,5]
= ;
val it = [2,3,1,0] : int list
- List.filter(fn x => String.sub(x, 0) = "o")["oo", "as"];
stdIn:4.21-4.43 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char * char
  operand:         char * string
  in expression:
    String.sub (x,0) = "o"
- List.filter(fn x => String.size > 1) = "o")["oo", "as"];
stdIn:1.44-2.1 Error: syntax error: deleting  RPAREN LBRACKET
stdIn:2.5 Error: syntax error found at COMMA
- List.filter(fn x => String.size > 1)["oo", "as"];
stdIn:1.22-1.37 Error: operator and operand don't agree [overload]
  operator domain: 'Z * 'Z
  operand:         (string -> int) * int
  in expression:
    String.size > 1
- List.filter(fn x => x.size > 1)["oo", "as"];
stdIn:1.22-1.28 Error: unbound structure: x in path x.size
- List.filter(fn x => String.size x > 1)["oo", "as"];
val it = ["oo","as"] : string list
- List.filter(fn x => String.size x > 1)["oo", "as"];
val it = ["oo","as"] : string list
- List.filter(fn x => String.sub(x, 0) = "o")["oo", "as"];
stdIn:6.21-6.43 Error: operator and operand don't agree [tycon mismatch]
  operator domain: char * char
  operand:         char * string
  in expression:
    String.sub (x,0) = "o"
- List.filter(fn x => Char.isUpper(String.sub(x, 0)))["oo", "as"];
val it = [] : string list
- List.filter(fn x => Char.isUpper(String.sub(x, 0)))["oo", "As"];
val it = ["As"] : string list
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val check_if_capital = fn : string -> bool
val only_capitals = fn : string list -> string list
val it = () : unit
- only_capitals("asd", "dsa", "Dasda", "RETsad", "asdSWDw"];
= );
stdIn:2.57-3.2 Error: syntax error: deleting  RBRACKET SEMICOLON RPAREN
- only_capitals(["asd", "dsa", "Dasda", "RETsad", "asdSWDw"]);
val it = ["Dasda","RETsad"] : string list
- only_capitals(["asd", "dsa", "Dasda", "RETsad", "asdSWDw"]);
val it = ["Dasda","RETsad"] : string list
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
hw3provided.sml:43.6-45.23 Error: operator ad operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'Y
  operand:         (string * string -> string) * string * string list
  in expression:
    List.foldl ((fn (<pat>,<pat>) => if <exp> then <exp> else <exp>),"",l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
hw3provided.sml:43.6-43.39 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'Y
  operand:         ('X * 'W -> 'X) * string * string list
  in expression:
    List.foldl ((fn (<pat>,<pat>) => x),"",l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- fold ((fn (x,y) => x+y), 0, foo)

= = ;
stdIn:1.2-1.6 Error: unbound variable or constructor: fold
stdIn:1.30-1.33 Error: unbound variable or constructor: foo
- List.foldl(
= :
= ;
= );
stdIn:4.1-6.2 Error: syntax error: deleting  COLON SEMICOLON RPAREN
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
hw3provided.sml:43.6-43.41 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'Y
  operand:         ('X * 'W -> 'X) * string * string list
  in expression:
    List.foldl ((fn (<pat>,<pat>) => x),"",l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- List.foldl((fn (x, y) => x), "", l);
stdIn:6.18 Error: unbound variable or constructor: l
stdIn:1.2-6.20 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'Y
  operand:         ('X * 'W -> 'X) * string * _
  in expression:
    List.foldl ((fn (<pat>,<pat>) => x),"",<errorvar>)
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
hw3provided.sml:43.6-43.41 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'Y
  operand:         ('X * 'W -> 'X) * string * string list
  in expression:
    List.foldl ((fn (<pat>,<pat>) => x),"",l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- List.foldl((fn (x, y) => x + y), 0, [1, 2, 3]);
stdIn:1.2-6.31 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'Y
  operand:         ('X * 'X -> 'X) * int * int list
  in expression:
    List.foldl
      ((fn (<pat>,<pat>) => <exp> + <exp>),0,1 :: 2 :: <exp> :: <exp>)
- List.foldl (op ^) "x" ["a","b","c"];
val it = "cbax" : string
- List.foldl (fn (x, y) => x) "x" ["a","b","c"];
val it = "c" : string
- List.foldl (fn (x, y) => y) "x" ["a","b","c"];
val it = "x" : string
- List.foldl (fn (x, y) => y) "" ["a","b","c"];
val it = "" : string
- List.foldl (fn (x, y) => if String.size(x) > String.size(y) then x else y) "" ["a","b","c"];
val it = "a" : string
- List.foldl (fn (x, y) => if String.size(x) > String.size(y) then x else y) "" ["abc","asbs","cdd"];
val it = "asbs" : string
- List.foldl (fn (x, y) => if String.size(x) > String.size(y) then x else y) "" ["abc","asbs","cdda"];
val it = "asbs" : string
- List.foldl (fn (x, y) => if String.size(x) > String.size(y) then x else y) "" [];
val it = "" : string
- List.foldl (fn (x, y) => if String.size(x) > String.size(y) then x else y) "" [];
val it = "" : string
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
va longest_string1 = fn : string list -> string
val it = () : uni

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- List.foldl (fn (x, y) => if String.size(x) > String.size(y) then x else y) "" [];
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val it = "" : string
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val it = () : unit
- longest_string2(["asd", "dsa"]);
val it = "" : string
- longest_string1(["asd", "dsa"]);
val it = "" : string
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val it = () : unit
- longest_string1(["asd", "dsa"]);
val it = "asd" : string
- longest_string2(["asd", "dsa"]);
val it = "dsa" : string
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:52.6-52.27 Error: can't find function arguments in clause
hw3provided.sml:52.78-52.93 Error: unbound variable or constructor: longest_string4

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:52.85-52.100 Error: unbound variable or constructor: longest_string4

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:52.85-52.100 Error: unbound variable or constructor: longest_string4

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string3 = fn : string list -> string
val logest_string4 = fn : string list -> string
val longest_string_helper = fn : 'a * 'b -> int * int -> string list -> string
val it = () : unit
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string3 = fn : string list -> string
val logest_string4 = fn : string list -> string
val longest_string_helper = fn
  : 'a -> ('a -> 'b -> bool) * 'b -> string list -> string
val it = () : unit
- longest_string_helper >
= ;
stdIn:3.24 Error: expression or pattern ends with infix identifier ">"
stdIn:3.1-3.24 Warning: type vars not generalized because of
   value restriction are instantiated to dummy types (X1,X2,...)
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:55.93-55.108 Error: unbound variable or constructor: longest_string4

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string3 = fn : string list -> string
val logest_string4 = fn : string list -> string
val greater_than = fn : int * int -> bool
val longest_string_helper = fn : 'a -> int * int -> string list -> string
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string3 = fn : string list -> string
val logest_string4 = fn : string list -> string
val greater_than = fn : int * int -> bool
val longest_stringval increment = fn x => x+1
_helper = fn : bool -> string list -> string
val it = () : uni
- 
- 
- longest_string_helper(fn x => true)
= ;
stdIn:5.1-5.36 Error: operator and operand don't agree [tycon mismatch]
  operator domain: bool
  operand:         'Z -> bool
  in expression:
    longest_string_helper (fn x => true)
- longest_string_helper true
= ;
val it = fn : string list -> string
- val x1 = longest_string_helper true
= ;
val x1 = fn : string list -> string
- x1 ["asd", "dsa"];
val it = "asd" : string
- val x1 = longest_string_helper false
= ;
val x1 = fn : string list -> string
- x1 ["asd", "dsa"];
val it = "asd" : string
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val greater_than = fn : int * int -> bool
val longest_string_helper = fn : bool -> string list -> string
val it = () : unit
- val x1 = longest_string_helper false
;
val x1 = fn : string list -> string
- x1 ["asd", "dsa"];
val it = "dsa" : string
- val x1 = longest_string_helper true;
val x1 = fn : string list -> string
- x1 ["asd", "dsa"];
val it = "asd" : strin
- 
- 
- 
- longest_string_helper(greater_than(1, 2))
= ;
val it = fn : string list -> string
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val greater_than = fn : int * int -> bool
val longest_string_helper = fn : bool -> string list -> string
val it = () : unit
- longest_string1(["asd", "dsa", "ass"]);
val it = "asd" : string
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val greater_than = fn : int * int -> bool
val longest_string_helper = fn : bool -> string list -> string
val it = () : unit
- longest_string1(["asd", "dsa", "ass"]);
val it = "asd" : string
- longest_string2(["asd", "dsa", "ass"]);
val it = "" : string
- longest_string1(["asd", "dsa", "ass"]);
val it = "asd" : string
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:55.6-55.27 Error: can't find function arguments in clause
hw3provided.sml:55.33 Error: unbound variable or constructor: f

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:55.6-55.27 Error: can't find function arguments in clause
hw3provided.sml:55.33 Error: unbound variable or constructor: f

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val greater_than = fn : int * int -> bool
val longest_string_helper = fn : bool -> string list -> string
val it = () : unit
- longest_string1(["asd", "dsa", "ass"]);
val it = "asd" : string
- longest_string2(["asd", "dsa", "ass"]);
val it = "ass" : string
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:48.6-48.23 Error: non-constructor applied to argument in pattern: longest_string3
hw3provided.sml:48.26-48.47 Error: unbound variable or constructor: longest_string_helper

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_string_helper = fn : ('a * 'b -> 'c) -> 'a * 'b -> 'c
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_string_helper = fn : ('a * 'a -> bool) -> 'a * 'a -> 'a
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:50.59 Error: syntax error: inserting  SEMICOLON

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:50.6-50.23 Error: non-constructor applied to argument in pattern: longest_string4
hw3provided.sml:50.37-50.58 Error: unbound variable or constructor: longest_string_helper
hw3provided.sml:50.84 Error: unbound variable or constructor: l

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:55.53-55.55 Error: syntax error: replacing  DARROW with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:55.55-55.57 Error: syntax error: replacing  DARROW with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:50.6-50.23 Error: non-constructor applied to argument in pattern: longest_string4
hw3provided.sml:50.26-50.47 Error: unbound variable or constructor: longest_string_helper
hw3provided.sml:50.70 Error: unbound variable or constructor: l
hw3provided.sml:54.40-54.49 Error: unbound variable or constructor: fold in path List.fold

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:48.40-48.49 Error: unbound variable or constructor: fold in path List.fold
hw3provided.sml:54.6-54.23 Error: non-constructor applied to argument in pattern: longest_string4
hw3provided.sml:54.70 Error: unbound variable or constructor: l

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:48.40-48.104 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'Y
  operand:         (string * string -> 'X) * string * 'W
  in expression:
    List.foldl ((fn (<pat>,<pat>) => f <exp>),"",l)
hw3provided.sml:54.6-54.23 Error: non-constructor applied to argument in pattern: longest_string4
hw3provided.sml:54.70 Error: unbound variable or constructor: l

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:48.40-48.104 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'Y
  operand:         (string * string -> 'X) * string * 'W
  in expression:
    List.foldl ((fn (<pat>,<pat>) => f <exp>),"",l)
hw3provided.sml:54.6-54.23 Error: non-constructor applied to argument in pattern: longest_string4
hw3provided.sml:54.70 Error: unbound variable or constructor: l

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:48.45 Error: syntax error: inserting  FN

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:48.53-48.55 Error: syntax error: replacing  DARROW with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : ('a * 'b -> 'c) -> 'a * 'b -> 'c
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
hw3provided.sml:48.53-48.58 Error: syntax error: deleting  DARROW FN

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn
  : (string * string -> bool) -> string list -> string
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val it = () : unit
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:55.6-55.23 Error: non-constructor applied to argument in pattern: longest_string3
hw3provided.sml:55.69 Error: unbound variable or constructor: l
hw3provided.sml:57.6-57.23 Error: non-constructor applied to argument in pattern: longest_string4
hw3provided.sml:57.70 Error: unbound variable or constructor: l

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val it = () : unit
- longest_string3 ["A","bc","C"];
val it = "bc" : string
- longest_string3 ["A","bc","C"];
val it = "bc" : string
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val it = () : unit
- longest_string4 ["A","bc","C"];
val it = "bc" : string
- longest_string4 ["A","B","C"];
val it = "C" : string
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val sh = fn : string list -> string
val it = () : unit
- sh ["asd", "asdsd", "s"];
val it = "" : string
- longest_string4 ["A","B","C"];
val it = "C" : string
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val sh = fn : string list -> string
val it = () : unit
- sh ["asd", "asdsd", "s"];
val it = "s" : string
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:55.36-55.94 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string list
  operand:         string list -> string list
  in expression:
    (longest_string_helper (fn (<pat>,<pat>) => <exp> > <exp>)) only_capitals

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val it = () : unit
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val it = () : unit
- longest_capitalized(["Asdsd", "sdsd", "sdsdsdsdsd", "Asdsd", "ASDs"]);
val it = "Asdsd" : string
- longest_capitalized ["A","bc","C"] = "A";
val it = true : bool
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:55.37-55.51 Error: unbound variable or constructor: longest_string

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val it = () : unit
- longest_capitalized ["A","bc","C"] = "A";
val it = true : bool
- longest_capitalized(["Asdsd", "sdsd", "sdsdsdsdsd", "Asdsd", "ASDs"]);
val it = "Asdsd" : string
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val it = () : unit
- rev_string("Jose");
val it = "esoJ" : string
- rev_string("JoseMourinho");
val it = "ohniruoMesoJ" : string
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:60.31-60.45 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> 'Y
  operand:         'X * 'W
  in expression:
    List.map (f,l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b) -> 'a -> 'b
val it = () : unit
- first_answer (fn x => if x > 3 then SOME x else NONE) [1,2,3,4,5];
stdIn:2.1-2.66 Error: operator and operand don't agree [literal]
  operator domain: int
  operand:         int list
  in expression:
    (first_answer (fn x => if <exp> then <exp> else <exp>))
        (1 :: 2 :: 3 :: <exp> :: <exp>)
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:63.18-63.63 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         ''Z * ('Y -> 'Y option)
  in expression:
    f x = SOME

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:60.31-60.5 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> 'Y
  operand:         'X * 'W
  in expression:
    List.map (f,l)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : 'a -> 'b list -> int
val it = () : unit
first_answer (fn x => if x > 3 then SOME x else NONE) [1,2,3,4,5]
= first_answer (fn x => if x > 3 then SOME x else NONE) [1,2,3,4,5];
stdIn:2.1-3.66 Error: operator is not a function [tycon mismatch]
  operator: int
  in expression:
    ((first_answer (fn <pat> => <exp>)) (1 :: 2 :: <exp> :: <exp>))
        first_answer
- first_answer (fn x => if x > 3 then SOME x else NONE) [1,2,3,4,5];
val it = 2 : int
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b) -> 'a list -> 'b list
val it = () : unit
- first_answer (fn x => if x > 3 then SOME x else NONE) [1,2,3,4,5];
val it = [NONE,NONE,NONE,SOME 4,SOME 5] : int option list
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:62.8 Error: syntax error: inserting  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:64.21-64.55 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         ''Z * ('Y -> 'Y option)
  in expression:
    f x = SOME

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:65.11-65.15 Error: data constructor SOME used without argument in pattern
hw3provided.sml:66.21-66.27 Error: operator and operand don't agree [circularity]
  operator domain: 'Z
  operand:         'Z list
  in expression:
    f xs'

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:66.21-66.27 Error: operator and operand don't agree [circularity]
  operator domain: 'Z
  operand:         'Z list
  in expression:
    f xs'

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val it = () : unit
- first_answer (fn x => if x > 3 then SOME x else NONE) [1,2,3,4,5];
val it = 4 : int
- first_answer (fn x => if x > 3 then SOME x else NONE) [1,2,3,4,5] = 4
= ;
val it = true : bool
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answer = fn : ('a -> 'b option) -> 'a list -> 'a list option
val it = () : unit
- all_answers (fn x => if x = 1 then SOME [x] else NONE) [2,3,4,5,6,7] = NONE
= ;
stdIn:2.1-2.12 Error: unbound variable or constructor: all_answers
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val it = () : unit
- all_answers (fn x => if x = 1 then SOME [x] else NONE) [2,3,4,5,6,7] = NONE;
val it = true : bool
- all_answers (fn x => if x = 1 then SOME [x] else NONE) [1,1,1,1,1,1] = NONE;
val it = false : bool
- all_answers (fn x => if x = 1 then SOME [x] else NONE) [1,1,1,1,1,1] = SOME [1, 1, 1, 1, 1, 1];
val it = true : bool
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:84.26 Error: syntax error: inserting  ORELSE

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:87.24 Error: syntax error: replacing  WILD with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:56.16-56.30 Error: unbound variable or constructor: check_elements
hw3provided.sml:58.9-58.23 Error: unbound variable or constructor: check_elements
hw3provided.sml:70.9-70.23 Error: unbound variable or constructor: chexk_elements
hw3provided.sml:87.35 Error: unbound variable or constructor: p
hw3provided.sml:87.6-87.37 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         (int -> int) * ('Z -> 'Z) * _
  in expression:
    g ((fn x => <exp> + <exp>),(fn x => x),<errorvar>)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:56.16-56.30 Error: unbound variable or constructor: check_elements
hw3provided.sml:58.9-58.23 Error: unbound variable or constructor: check_elements
hw3provided.sml:70.9-70.23 Error: unbound variable or constructor: chexk_elements
hw3provided.sml:87.35 Error: unbound variable or constructor: p
hw3provided.sml:87.6-87.37 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         (int -> int) * ('Z -> 'Z) * _
  in expression:
    g ((fn x => <exp> + <exp>),(fn x => x),<errorvar>)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:70.9-70.23 Error: unbound variable or constructor: chexk_elements
hw3provided.sml:87.35 Error: unbound variable or constructor: p
hw3provided.sml:87.6-87.37 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         (int -> int) * ('Z -> 'Z) * _
  in expression:
    g ((fn x => <exp> + <exp>),(fn x => x),<errorvar>)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:87.35 Error: unbound variable or constructor: p
hw3provided.sml:87.6-87.37 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         (int -> int) * ('Z -> 'Z) * _
  in expression:
    g ((fn x => <exp> + <exp>),(fn x => x),<errorvar>)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:87.6-87.43 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         (int -> int) * ('Z -> 'Z) * 'Y
  in expression:
    g ((fn x => <exp> + <exp>),(fn x => x),pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val count_wildcards = fn : (unit -> int) -> (string -> int) -> pattern -> int
val it = () : unit
- count_wildcards Wildcard
= ;
stdIn:2.1-2.25 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         pattern
  in expression:
    count_wildcards Wildcard
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:86.6 Error: can't find function arguments in clause

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.19 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> unit
  in expression:
    g a

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.9 Error: operator and operand don't agree [literal]
  operator domain: unit -> int
  operand:         int
  in expression:
    g 3

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.11 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> unit
  in expression:
    g a

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.22 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         (unit -> unit) * (unit -> unit) * 'Z
  in expression:
    g (a,b,pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
val count_wildcards = fn : (unit -> int) -> (string -> int) -> pattern -> int
val it = () : unit
- count_wildcards Wildcard;
stdIn:2.1-2.25 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         pattern
  in expression:
    count_wildcards Wildcard
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.16-93.35 Error: operator is not a function [tycon mismatch]
  operator: unit
  in expression:
    (print "asd") pattern

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.61 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         ('Z -> unit) * ('Y -> unit) * 'X
  in expression:
    g ((fn x => print <exp>),(fn y => print <exp>),pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.59 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         ('Z -> unit) * ('Y -> unit) * 'X
  in expression:
    g ((fn x => print <exp>),(fn y => print <exp>),pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:86.11-86.13 Error: syntax error: replacing  DARROW with  EQUALOP
hw3provided.sml:88.2 Error: syntax error: inserting  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.28 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> unit
  in expression:
    g (fn x => print "asd")

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.10 Error: operator and operand don't agree [literal]
  operator domain: unit -> int
  operand:         int
  in expression:
    g 1

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
val count_wildcards = fn : 'a -> (string -> int) -> pattern -> int
val it = () : unit
- count_wildcards Wildcard;
val it = fn : (string -> int) -> pattern -> int
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.29 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         ('Z -> int) * ('Y -> int)
  in expression:
    g ((fn x => 1),(fn x => 2))

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.12-93.14 Error: syntax error: replacing  DARROW with  LBRACKET
hw3provided.sml:94.1 Error: syntax error found at EOF

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.12-93.19 Error: syntax error: deleting  DARROW INT FN
hw3provided.sml:93.22-93.24 Error: syntax error: replacing  DARROW with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.12-93.19 Error: syntax error: deleting  DARROW INT FN
hw3provided.sml:93.22-93.24 Error: syntax error: replacing  DARROW with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.10 Error: syntax error: inserting  LPAREN
hw3provided.sml:93.20 Error: syntax error: inserting  LPAREN
hw3provided.sml:94.1 Error: syntax error found at EOF

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.9 Error: unbound variable or constructor: gfn

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.39 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         ('Z -> int) * ('Y -> int) * 'X
  in expression:
    g ((fn x => 1),(fn x => 2),pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.8 Error: syntax error: inserting  LPAREN
hw3provided.sml:93.18 Error: syntax error: inserting  LPAREN
hw3provided.sml:94.1 Error: syntax error found at EOF

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.8 Error: syntax error: inserting  LPAREN
hw3provided.sml:94.1 Error: syntax error found at EOF

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.6-93.39 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         ('Z -> int) * ('Y -> int) * 'X
  in expression:
    g ((fn x => 1),(fn y => 2),pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.9 Error: syntax error: inserting  LPAREN
hw3provided.sml:93.20 Error: syntax error: inserting  LPAREN
hw3provided.sml:94.1 Error: syntax error found at EOF

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.22 Error: syntax error: inserting  ORELSE

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> unit
val b = fn : unit -> unit
hw3provided.sml:93.22 Error: syntax error: inserting  ORELSE

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.22 Error: syntax error: inserting  ORELSE

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.6-93.11 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string -> int
  operand:         unit -> string
  in expression:
    (g a) b

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : 'a -> pattern -> int
val it = () : unit
- count_wildcards Wildcard;
val it = fn : pattern -> int
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- count_wildcards Wildcard;
val it = 3 : int
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- count_wildcards Wildcard;
val it = 1 : int
- count_wildcards Wildcard Wildcard;
stdIn:7.1-7.34 Error: operator is not a function [tycon mismatch]
  operator: int
  in expression:
    (count_wildcards Wildcard) Wildcard
- count_wildcards Wildcard;
val it = 1 : int
- count_wildcards Wildcard
= ;
val it = 1 : int
- count_wildcards Wildcard Wildcard;
stdIn:10.1-10.34 Error: operator is not a function [tycon mismatch]
  operator: int
  in expression:
    (count_wildcards Wildcard) Wildcard
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:87.8-87.13 Error: syntax error: deleting  FN DARROW
hw3provided.sml:87.16 Error: syntax error: inserting  ORELSE

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:87.8-87.13 Error: syntax error: deleting  FN DARROW
hw3provided.sml:87.14 Error: syntax error: inserting  LPAREN
hw3provided.sml:88.1 Error: syntax error found at EOF

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.9-93.13 Error: syntax error: deleting  COMMA ID COMMA

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- count_wildcards ;
val it = fn : pattern -> int
- count_wildcards z;
stdIn:3.17 Error: unbound variable or constructor: z
- count_wildcards "d";
stdIn:1.2-1.21 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string
  in expression:
    count_wildcards "d"
- count_wildcards 3;
stdIn:1.2-1.19 Error: operator and operand don't agree [literal]
  operator domain: pattern
  operand:         int
  in expression:
    count_wildcards 3
- count_wildcards _;
= ;
= ;
stdIn:1.18 Error: syntax error found at WILD
- count_wildcards Variable x;
stdIn:5.5 Error: unbound variable or constructor: x
stdIn:1.2-5.6 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string -> pattern
  in expression:
    count_wildcards Variable
- count_wildcards Wildcard;
val it = 1 : int
- 
- count_wildcards Variable 3;
stdIn:7.1-7.27 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string -> pattern
  in expression:
    count_wildcards Variable
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.8-93.13 Error: syntax error: deleting  FN DARROW

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.12 Error: syntax error: inserting  WILD

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.6-93.31 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         ('Z -> int) * ('Y -> int) * 'X
  in expression:
    g ((fn _ => 1),b,pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.6 Error: syntax error: inserting  LPAREN

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.6 Error: syntax error: inserting  LPAREN

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.6 Error: syntax error: inserting  LPAREN
hw3provided.sml:94.1 Error: syntax error found at EOF

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.6-93.31 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         (unit -> int) * ('Z -> int) * 'Y
  in expression:
    g (a,(fn x => 1),pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.6-93.31 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         (unit -> int) * ('Z -> int) * 'Y
  in expression:
    g (a,(fn x => 1),pattern)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- count_wildcards TupleP([Wildcard, Wildcard]);
stdIn:2.1-2.45 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         pattern list -> pattern
  in expression:
    count_wildcards TupleP
- count_wildcards TupleP[Wildcard, Wildcard];
stdIn:1.2-2.20 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         pattern list -> pattern
  in expression:
    count_wildcards TupleP
- count_wildcards TupleP;
stdIn:1.2-1.24 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         pattern list -> pattern
  in expression:
    count_wildcards TupleP
- count_wildcards UnitP
= ;
val it = 0 : int
- count_wildcards Variable 4;
stdIn:4.1-4.27 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string -> pattern
  in expression:
    count_wildcards Variable
- count_wildcards Variable ;
stdIn:1.2-4.1 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string -> pattern
  in expression:
    count_wildcards Variable
- count_wildcards Variable "w";
stdIn:1.2-4.5 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string -> pattern
  in expression:
    count_wildcards Variable
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- all_answers (fn x => if x = 1 then SOME [x] else NONE) [] = SOME[];
val it = true : bool
- val test8b = all_answers (fn x => if x > 3 then SOME [x] else NONE) [2,3,4,5,6,7] = SOME[4,5,6,7];
val test8b = false : bool
- val test8b = all_answers (fn x => if x > 3 then SOME [x] else NONE) [2,3,4,5,6, 7, 8];
val test8b = NONE : int list option
- val test8b = all_answers (fn x => if x > 3 then SOME [x] else NONE) [4,5,6, 7, 8];
val test8b = SOME [8,7,6,5,4] : int list option
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.8 Error: syntax error: inserting  ORELSE

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- count_wildcards Variable "w";
stdIn:10.1-10.29 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string -> pattern
  in expression:
    count_wildcards Variable
- count_wildcards Wildcard;
val it = 1 : int
- count_wildcards Variable "123";
stdIn:11.1-11.31 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string -> pattern
  in expression:
    count_wildcards Variable
- count_wildcards "213";
stdIn:1.2-1.23 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string
  in expression:
    count_wildcards "213"
- count_wildcards "213";
stdIn:1.2-1.23 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string
  in expression:
    count_wildcards "213"
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- count_wildcards "213";
stdIn:12.1-12.22 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string
  in expression:
    count_wildcards "213"
- count_wildcards Variable "123";
stdIn:1.2-12.8 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         string -> pattern
  in expression:
    count_wildcards Variable
- count_wildcards Wildcard;
val it = 1 : int
- count_wildcards TupleP Wildcard;
stdIn:13.1-13.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         pattern list -> pattern
  in expression:
    count_wildcards TupleP
- count_wildcards TupleP [Wildcard];
stdIn:1.2-13.8 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         pattern list -> pattern
  in expression:
    count_wildcards TupleP
- count_wildcards (TupleP [Wildcard]);
val it = 1 : int
- count_wildcards (TupleP [Wildcard, Wildcard]);
val it = 2 : int
- count_wildcards (TupleP [Wildcard, Wildcard, Wildcard]);
val it = 3 : int
- count_wildcards (TupleP [Wildcard, Wildcard, Wildcard]);
val it = 3 : int
- count_wildcards(ConstructorP("123", Wildcard));
val it = 1 : int
- count_wildcards(TupleP[ConstructorP("123", Wildcard),ConstructorP("123", TupleP[Wildcard]), Wildcard] );
val it = 3 : int
- count_wildcards(Variable "qwe");
val it = 2 : int
- count_wildcards(Variable "qwe");
val it = 2 : int
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- count_wildcards "213";
stdIn:1.2-1.17 Error: unbound variable or constructor: count_wildcards
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val it = () : unit
- count_wildcards(Variable "qwe");
val it = 0 : int
- count_wildcards(TupleP[Variable "qwe", Wildcard]);
val it = 1 : int
- count_wildcards(TupleP[Variable "qwe", Wildcard, Variable "wqe"]);
val it = 1 : int
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val it = () : unit
- count_wildcards(TupleP[Variable "qwe", Wildcard, Variable "wqe"]);
val it = 1 : int
- count_wild_and_variable_lengths(TupleP[Variable "qwe", Wildcard, Variable "wqe"]);
val it = 7 : int
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:98.37-98.44 Error: unbound type constructor: Pattern
hw3provided.sml:98.25-98.31 Error: unbound type constructor: String
hw3provided.sml:99.32-99.39 Error: unbound variable or constructor: pattern

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val it = () : uni
- count_some_var ("x", Variable("x")) = 1;
val it = true : bool
- count_some_var ("x", TupleP[Variable("x"), Wildcard, Variable("x")]) = 1;
val it = false : bool
- count_some_var ("x", TupleP[Variable("x"), Wildcard, Variable("x")]) = 2;
val it = false : bool
- count_some_var ("x", TupleP[Variable("x"), Wildcard, Variable("x")])
= ;
val it = 3 : int
- count_some_var ("x", TupleP[Variable("x"), Wildcard, Variable("x")]) = 2;
val it = false : bool
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val a = fn : unit -> int
val b = fn : 'a -> int
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val it = () : unit
- count_some_var ("x", TupleP[Variable("x"), Wildcard, Variable("x")]) = 2;
val it = true : bool
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:96.32 Error: unbound variable or constructor: p
hw3provided.sml:96.6-96.33 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string -> int
  operand:         string -> string
  in expression:
    (g (fn x => 0)) (fn y => y)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:94.52-94.61 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * 'Y
  in expression:
    r p @ i
hw3provided.sml:109.32 Error: unbound variable or constructor: s
hw3provided.sml:109.53 Error: unbound variable or constructor: p

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:94.52-94.61 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * 'Y
  in expression:
    r p @ i
hw3provided.sml:109.32 Error: unbound variable or constructor: s
hw3provided.sml:109.53 Error: unbound variable or constructor: p

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:94.52-94.59 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * 'Y
  in expression:
    r p @ i
hw3provided.sml:109.32 Error: unbound variable or constructor: s
hw3provided.sml:109.53 Error: unbound variable or constructor: p

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.29 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> pattern list
  in rule:
    TupleP ps => ps
hw3provided.sml:109.32 Error: unbound variable or constructor: s
hw3provided.sml:109.53 Error: unbound variable or constructor: p

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.29 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> pattern list
  in rule:
    TupleP ps => ps
hw3provided.sml:109.32 Error: unbound variable or constructor: s
hw3provided.sml:109.53 Error: unbound variable or constructor: p

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.29 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> pattern list
  in rule:
    TupleP ps => ps
hw3provided.sml:109.32 Error: unbound variable or constructor: s
hw3provided.sml:109.53 Error: unbound variable or constructor: p

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.29 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> pattern list
  in rule:
    TupleP ps => ps

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:93.28-93.31 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         (pattern -> int) * string
  in expression:
    r @ x
hw3provided.sml:91.3-96.29 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> _ list
  this rule: pattern -> int
  in rule:
    ConstructorP (_,p) => r p
hw3provided.sml:91.3-96.29 Error: types of rules don't agree [literal]
  earlier rule(s): pattern -> _ list
  this rule: pattern -> int
  in rule:
    _ => 0

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : (unit -> int) -> (string -> int) -> pattern -> 'a list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val it = () : unit
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.30 Eror: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> 'Z list
  in rule:
    Variable x => nil
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> 'Z list
  in rule:
    TupleP ps => nil
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> 'Z list
  in rule:
    ConstructorP (_,p) => nil
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> 'Z list
  in rule:
    _ => nil
hw3provided.sml:110.6-110.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:94.51-94.60 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * 'Y
  in expression:
    r p @ i
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> 'Z list
  in rule:
    ConstructorP (_,p) => nil
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> int
  this rule: pattern -> 'Z list
  in rule:
    _ => nil
hw3provided.sml:110.6-110.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> 'Z list
  this rule: pattern -> int
  in rule:
    Variable x => f2 x
hw3provided.sml:94.51-94.60 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * 'Y
  in expression:
    r p @ i
hw3provided.sml:110.6-110.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> 'Z list
  this rule: pattern -> int
  in rule:
    Variable x => f2 x
hw3provided.sml:94.51-94.60 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * 'Y
  in expression:
    r p @ i
hw3provided.sml:110.6-110.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:94.51-94.60 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * 'Y
  in expression:
    r p @ i
hw3provided.sml:110.6-110.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> string list
  this rule: pattern -> int list
  in rule:
    TupleP ps => ((List.foldl (fn <rule>)) nil) ps
hw3provided.sml:110.6-110.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> string list
  this rule: pattern -> int list
  in rule:
    TupleP ps => ((List.foldl (fn <rule>)) nil) ps
hw3provided.sml:110.6-110.41 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> string list
  this rule: pattern -> int list
  in rule:
    TupleP ps => ((List.foldl (fn <rule>)) nil) ps
hw3provided.sml:110.6-110.41 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> string list
  this rule: pattern -> int list
  in rule:
    TupleP ps => ((List.foldl (fn <rule>)) nil) ps
hw3provided.sml:110.6-110.41 Error: operator and operand don't agree [tycon mismatch]
  operator domain: unit -> int
  operand:         unit -> 'Z list
  in expression:
    h (fn x => nil)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:91.3-96.30 Error: types of rules don't agree [tycon mismatch]
  earlier rule(s): pattern -> string list
  this rule: pattern -> int list
  in rule:
    TupleP ps => ((List.foldl (fn <rule>)) nil) ps

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:87.6-97.9 Error: right-hand-side of clause doesn't agree with function result type [tycon mismatch]
  expression:  'Z -> pattern -> string list
  result type:  'Z -> pattern -> string
  in declaration:
    h = (fn arg => (fn <pat> => <exp>))

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:87.6-97.9 Error: right-hand-side of clause doesn't agree with function result type [tycon mismatch]
  expression:  'Z -> pattern -> string list
  result type:  'Z -> pattern -> string
  in declaration:
    h = (fn arg => (fn <pat> => <exp>))

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : 'a -> 'b -> pattern -> string list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val check_pat = fn : pattern -> string list
val it = () : unit

- 
- check_pat (Variable("x"))
= ;
val it = ["x"] : string list
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : 'a -> 'b -> pattern -> string list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val check_pat = fn : pattern -> string list
val it = () : unit
- check_pat (Variable("x"))
= ;
val it = ["x"] : string list
- check_pat (TupleP[Wildcard]);
val it = [] : string list
- check_pat (TupleP[Wildcard, Variable "x", Variable "z"]);
val it = ["z","x"] : string list
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:89.13-89.15 Error: unbound variable or constructor: f1
hw3provided.sml:89.16-89.18 Error: unbound variable or constructor: f2
hw3provided.sml:87.6-97.9 Error: right-hand-side of clause doesn't agree with function result type [tycon mismatch]
  expression:  string list
  result type:  _ -> pattern -> string list
  in declaration:
    h =
      (fn p =>
            let val <binding>
            in (case <exp>
                 of <rule>
                  | <rule>
                  | <rule>
                  | <rule>
                  | <rule>)
            end)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:89.13-89.15 Error: unbound variable or constructor: f1
hw3provided.sml:89.16-89.18 Error: unbound variable or constructor: f2
hw3provided.sml:87.6-97.9 Error: right-hand-side of clause doesn't agree with function result type [tycon mismatch]
  expression:  string list
  result type:  _ -> pattern -> string list
  in declaration:
    h =
      (fn p =>
            let val <binding>
            in (case <exp>
                 of <rule>
                  | <rule>
                  | <rule>
                  | <rule>
                  | <rule>)
            end)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:89.13-89.15 Error: unbound variable or constructor: f1
hw3provided.sml:89.16-89.18 Error: unbound variable or constructor: f2
hw3provided.sml:87.6-97.9 Error: right-hand-side of clause doesn't agree with function result type [tycon mismatch]
  expression:  string list
  result type:  _ -> pattern -> string list
  in declaration:
    h =
      (fn p =>
            let val <binding>
            in (case <exp>
                 of <rule>
                  | <rule>
                  | <rule>
                  | <rule>
                  | <rule>)
            end)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : pattern -> string list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val check_pat = fn : pattern -> string list
val it = () : unit
- check_pat (TupleP[Wildcard, Variable "x", Variable "z"]);
val it = ["z","x"] : string list
- check_pat (TupleP[Wildcard, Variable "x", Variable "z", Variable "asdsad"]);
val it = ["asdsad","z","x"] : string list
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:92.5 Error: syntax error: replacing  BAR with  OP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.3-117.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.exists ((fn x => <exp> = <exp>),list)
hw3provided.sml:120.5-120.30 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string list
  operand:         pattern -> string list
  in expression:
    check_if_unique h

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.3-117.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.exists ((fn x => <exp> = <exp>),tl list)
hw3provided.sml:120.5-120.30 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string list
  operand:         pattern -> string list
  in expression:
    check_if_unique h

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.3-117.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.exists ((fn x => <exp> = <exp>),tl list)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.3-117.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.exists ((fn x => <exp> = <exp>),tl list)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.3-117.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.exists ((fn x => <exp> = <exp>),tl list)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- List.exists(fn x => x = "a", ["a", "b"]);
stdIn:1.2-1.42 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.exists ((fn x => <exp> = <exp>),"a" :: "b" :: nil)
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- List.exists(fn x => x = "a", ["a", "b"]);
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
stdIn:1.2-1.42 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z -> bool
  operand:         (string -> bool) * string list
  in expression:
    List.exists ((fn x => <exp> = <exp>),"a" :: "b" :: nil)
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.22-115.24 Error: syntax error: replacing  DARROW with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.18 Error: syntax error: inserting  ORELSE

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.3-117.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string list
  operand:         'Z list -> 'Z list
  in expression:
    (List.exists (fn x => <exp> = <exp>)) tl

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:115.3-117.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string list
  operand:         'Z list -> 'Z list
  in expression:
    (List.exists (fn x => <exp> = <exp>)) tl

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- List.exists (fn x => x = hd list) ["a"];
stdIn:1.30-1.34 Error: unbound variable or constructor: list
- val list = ["a", "b", "c"]
= ;
val list = ["a","b","c"] : string list
- List.exists (fn x => x = a) list;
stdIn:3.26 Error: unbound variable or constructor: a
- List.exists (fn x => x = "a") list;
val it = true : bool
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : pattern -> string list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val append = fn : int list * int list -> int list
val check_if_unique = fn : string list -> bool
val check_pat = fn : pattern -> bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : pattern -> string list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val append = fn : int list * int list -> int list
val check_if_unique = fn : string list -> bool
val check_pat = fn : pattern -> bool
val it = () : unit
- 
- check_pat (Variable("x")) = true;
val it = true : bool
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s"]) = true;
val it = true : bool
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "x"]) = true;
val it = false : bool
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "x", ConstructorP("asd", Variable("sss")]) = true;
= ;
stdIn:7.107-7.110 Error: syntax error: deleting  RPAREN RBRACKET RPAREN
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "x", ConstructorP("asd", Variable("sss"))]) = true;
val it = false : bool
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s", ConstructorP("asd", Variable("sss"))]) = true;
val it = true : bool
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s", ConstructorP("asd", Variable("x"))]) = true;
val it = true : bool
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s", ConstructorP("asd", Variable("x"))]);
val it = true : bool
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : pattern -> string list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val append = fn : int list * int list -> int list
val check_if_unique = fn : string list -> bool
val check_pat = fn : pattern -> string list
val it = () : unit
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s", ConstructorP("asd", Variable("x"))]);
val it = ["x","s","asd","x"] : string list
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s", ConstructorP("x", Variable("x"))]);
val it = ["x","s","asd","x"] : string list
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s", ConstructorP("asd", Variable("x"))]);
val it = ["x","s","asd","x"] : string list
- check_pat(Constructor("a", Variable "x"));
stdIn:16.11-16.41 Error: operator and operand don't agree [tycon mismatch]
  operator domain: string * valu
  operand:         string * pattern
  in expression:
    Constructor ("a",Variable "x")
- check_pat(ConstructorP("a", Variable "x"));
val it = ["x"] : string list
- check_pat(ConstructorP("a", Variable "x"));
val it = ["x"] : string list
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
hw3provided.sml:113.6-118.32 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list
  operand:         'Y list -> 'Y list
  in expression:
    null tl

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
- 

Process sml finished
Standard ML of New Jersey v110.74 [built: Sat Oct  6 00:59:36 2012]
- use "hw3provided.sml";
[opening hw3provided.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : pattern -> string list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val append = fn : int list * int list -> int list
val check_if_unique = fn : string list -> bool
val check_pat = fn : pattern -> string list
val it = () : unit
- check_pat(ConstructorP("a", Variable "x"));
val it = ["x"] : string list
- check_pat(ConstructorP("a", Variable "x"));
val it = ["x"] : string list
- use "hw3provided.sml";
[opening hw3provided.sml]
exception NoAnswer
datatype pattern
  = ConstP of int
  | ConstructorP of string * pattern
  | TupleP of pattern list
  | UnitP
  | Variable of string
  | Wildcard
datatype valu
  = Const of int | Constructor of string * valu | Tuple of valu list | Unit
datatype typ
  = Anything | Datatype of string | IntT | TupleT of typ list | UnitT
val only_capitals = fn : string list -> string list
val longest_string1 = fn : string list -> string
val longest_string2 = fn : string list -> string
val longest_string_helper = fn : (int * int -> bool) -> string list -> string
val longest_string3 = fn : string list -> string
val longest_string4 = fn : string list -> string
val longest_capitalized = fn : string list -> string
val rev_string = fn : string -> string
val first_answer = fn : ('a -> 'b option) -> 'a list -> 'b
val all_answers = fn : ('a -> 'b option) -> 'a list -> 'a list option
val g = fn : (unit -> int) -> (string -> int) -> pattern -> int
val h = fn : pattern -> string list
val count_wildcards = fn : pattern -> int
val count_wild_and_variable_lengths = fn : pattern -> int
val count_some_var = fn : string * pattern -> int
val append = fn : int list * int list -> int list
val check_if_unique = fn : string list -> bool
val check_pat = fn : pattern -> bool
val it = () : unit
- check_pat(ConstructorP("a", Variable "x"));
val it = true : bool
- check_pat(ConstructorP("a", Variable "x"), Variable("x"));
stdIn:6.1-6.58 Error: operator and operand don't agree [tycon mismatch]
  operator domain: pattern
  operand:         pattern * pattern
  in expression:
    check_pat (ConstructorP ("a",Variable <exp>),Variable "x")
- check_pat(TupleP[ConstructorP("a", Variable "x"), Variable "x"]);
val it = false : bool
- check_pat(TupleP[ConstructorP("a", Variable "x"), Variable "y"]);
val it = true : bool
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s", ConstructorP("asd", Variable("x"))]);
val it = false : bool
- check_pat (TupleP[Variable "x", Variable "asd", Wildcard, Variable "s", ConstructorP("asd", Variable("d"))]);
val it = true : bool
- 